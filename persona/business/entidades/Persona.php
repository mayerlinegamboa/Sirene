<?php


 /**
  * Persona Value Object.
  * This class is value object representing database table tblpersona
  * This class is intented to be used together with associated Dao object.
  */

 /**
  * This sourcecode has been generated by FREE DaoGen generator version 2.4.1.
  * The usage of generated code is restricted to OpenSource software projects
  * only. DaoGen is available in http://titaniclinux.net/daogen/
  * It has been programmed by Tuomo Lukka, Tuomo.Lukka@iki.fi
  *
  * DaoGen license: The following DaoGen generated source code is licensed
  * under the terms of GNU GPL license. The full text for license is available
  * in GNU project's pages: http://www.gnu.org/copyleft/gpl.html
  *
  * If you wish to use the DaoGen generator to produce code for closed-source
  * commercial applications, you must pay the lisence fee. The price is
  * 5 USD or 5 Eur for each database table, you are generating code for.
  * (That includes unlimited amount of iterations with all supported languages
  * for each database table you are paying for.) Send mail to
  * "Tuomo.Lukka@iki.fi" for more information. Thank you!
  */




class Persona {

    /** 
     * Persistent Instance variables. This data is directly 
     * mapped to the columns of database table.
     */
    var $secpersona;
    var $pnombre;
    var $snombre;
    var $papellido;
    var $sapellido;
    var $direccion;
    var $movil;
    var $telefonofijo;
    var $edad;
    var $fnacimiento;
    var $email;
    var $sectipopersona;
    var $secdocumento;
    var $sectiposangre;
    var $secestrato;
    var $seccolegioprocedencia;
    var $seczona;
    var $secciudad;



    /** 
     * Constructors. DaoGen generates two constructors by default.
     * The first one takes no arguments and provides the most simple
     * way to create object instance. The another one takes one
     * argument, which is the primary key of the corresponding table.
     */

    function Persona () {

    }

    /* function Persona ($secpersonaIn) {

          $this->secpersona = $secpersonaIn;

    } */


    /** 
     * Get- and Set-methods for persistent variables. The default
     * behaviour does not make any checks against malformed data,
     * so these might require some manual additions.
     */

    function getSecpersona() {
          return $this->secpersona;
    }
    function setSecpersona($secpersonaIn) {
          $this->secpersona = $secpersonaIn;
    }

    function getPnombre() {
          return $this->pnombre;
    }
    function setPnombre($pnombreIn) {
          $this->pnombre = $pnombreIn;
    }

    function getSnombre() {
          return $this->snombre;
    }
    function setSnombre($snombreIn) {
          $this->snombre = $snombreIn;
    }

    function getPapellido() {
          return $this->papellido;
    }
    function setPapellido($papellidoIn) {
          $this->papellido = $papellidoIn;
    }

    function getSapellido() {
          return $this->sapellido;
    }
    function setSapellido($sapellidoIn) {
          $this->sapellido = $sapellidoIn;
    }

    function getDireccion() {
          return $this->direccion;
    }
    function setDireccion($direccionIn) {
          $this->direccion = $direccionIn;
    }

    function getMovil() {
          return $this->movil;
    }
    function setMovil($movilIn) {
          $this->movil = $movilIn;
    }

    function getTelefonofijo() {
          return $this->telefonofijo;
    }
    function setTelefonofijo($telefonofijoIn) {
          $this->telefonofijo = $telefonofijoIn;
    }

    function getEdad() {
          return $this->edad;
    }
    function setEdad($edadIn) {
          $this->edad = $edadIn;
    }

    function getFnacimiento() {
          return $this->fnacimiento;
    }
    function setFnacimiento($fnacimientoIn) {
          $this->fnacimiento = $fnacimientoIn;
    }

    function getEmail() {
          return $this->email;
    }
    function setEmail($emailIn) {
          $this->email = $emailIn;
    }

    function getSectipopersona() {
          return $this->sectipopersona;
    }
    function setSectipopersona($sectipopersonaIn) {
          $this->sectipopersona = $sectipopersonaIn;
    }

    function getSecdocumento() {
          return $this->secdocumento;
    }
    function setSecdocumento($secdocumentoIn) {
          $this->secdocumento = $secdocumentoIn;
    }

    function getSectiposangre() {
          return $this->sectiposangre;
    }
    function setSectiposangre($sectiposangreIn) {
          $this->sectiposangre = $sectiposangreIn;
    }

    function getSecestrato() {
          return $this->secestrato;
    }
    function setSecestrato($secestratoIn) {
          $this->secestrato = $secestratoIn;
    }

    function getSeccolegioprocedencia() {
          return $this->seccolegioprocedencia;
    }
    function setSeccolegioprocedencia($seccolegioprocedenciaIn) {
          $this->seccolegioprocedencia = $seccolegioprocedenciaIn;
    }

    function getSeczona() {
          return $this->seczona;
    }
    function setSeczona($seczonaIn) {
          $this->seczona = $seczonaIn;
    }

    function getSecciudad() {
          return $this->secciudad;
    }
    function setSecciudad($secciudadIn) {
          $this->secciudad = $secciudadIn;
    }



    /** 
     * setAll allows to set all persistent variables in one method call.
     * This is useful, when all data is available and it is needed to 
     * set the initial state of this object. Note that this method will
     * directly modify instance variales, without going trough the 
     * individual set-methods.
     */

    function setAll($secpersonaIn,
          $pnombreIn,
          $snombreIn,
          $papellidoIn,
          $sapellidoIn,
          $direccionIn,
          $movilIn,
          $telefonofijoIn,
          $edadIn,
          $fnacimientoIn,
          $emailIn,
          $sectipopersonaIn,
          $secdocumentoIn,
          $sectiposangreIn,
          $secestratoIn,
          $seccolegioprocedenciaIn,
          $seczonaIn,
          $secciudadIn) {
          $this->secpersona = $secpersonaIn;
          $this->pnombre = $pnombreIn;
          $this->snombre = $snombreIn;
          $this->papellido = $papellidoIn;
          $this->sapellido = $sapellidoIn;
          $this->direccion = $direccionIn;
          $this->movil = $movilIn;
          $this->telefonofijo = $telefonofijoIn;
          $this->edad = $edadIn;
          $this->fnacimiento = $fnacimientoIn;
          $this->email = $emailIn;
          $this->sectipopersona = $sectipopersonaIn;
          $this->secdocumento = $secdocumentoIn;
          $this->sectiposangre = $sectiposangreIn;
          $this->secestrato = $secestratoIn;
          $this->seccolegioprocedencia = $seccolegioprocedenciaIn;
          $this->seczona = $seczonaIn;
          $this->secciudad = $secciudadIn;
    }


    /** 
     * hasEqualMapping-method will compare two Persona instances
     * and return true if they contain same values in all persistent instance 
     * variables. If hasEqualMapping returns true, it does not mean the objects
     * are the same instance. However it does mean that in that moment, they 
     * are mapped to the same row in database.
     */
    function hasEqualMapping($valueObject) {

          if ($valueObject->getSecpersona() != $this->secpersona) {
                    return(false);
          }
          if ($valueObject->getPnombre() != $this->pnombre) {
                    return(false);
          }
          if ($valueObject->getSnombre() != $this->snombre) {
                    return(false);
          }
          if ($valueObject->getPapellido() != $this->papellido) {
                    return(false);
          }
          if ($valueObject->getSapellido() != $this->sapellido) {
                    return(false);
          }
          if ($valueObject->getDireccion() != $this->direccion) {
                    return(false);
          }
          if ($valueObject->getMovil() != $this->movil) {
                    return(false);
          }
          if ($valueObject->getTelefonofijo() != $this->telefonofijo) {
                    return(false);
          }
          if ($valueObject->getEdad() != $this->edad) {
                    return(false);
          }
          if ($valueObject->getFnacimiento() != $this->fnacimiento) {
                    return(false);
          }
          if ($valueObject->getEmail() != $this->email) {
                    return(false);
          }
          if ($valueObject->getSectipopersona() != $this->sectipopersona) {
                    return(false);
          }
          if ($valueObject->getSecdocumento() != $this->secdocumento) {
                    return(false);
          }
          if ($valueObject->getSectiposangre() != $this->sectiposangre) {
                    return(false);
          }
          if ($valueObject->getSecestrato() != $this->secestrato) {
                    return(false);
          }
          if ($valueObject->getSeccolegioprocedencia() != $this->seccolegioprocedencia) {
                    return(false);
          }
          if ($valueObject->getSeczona() != $this->seczona) {
                    return(false);
          }
          if ($valueObject->getSecciudad() != $this->secciudad) {
                    return(false);
          }

          return true;
    }



    /**
     * toString will return String object representing the state of this 
     * valueObject. This is useful during application development, and 
     * possibly when application is writing object states in textlog.
     */
    function toString() {
        $out = $this->getDaogenVersion();
        $out = $out."\nclass Persona, mapping to table tblpersona\n";
        $out = $out."Persistent attributes: \n"; 
        $out = $out."secpersona = ".$this->secpersona."\n"; 
        $out = $out."pnombre = ".$this->pnombre."\n"; 
        $out = $out."snombre = ".$this->snombre."\n"; 
        $out = $out."papellido = ".$this->papellido."\n"; 
        $out = $out."sapellido = ".$this->sapellido."\n"; 
        $out = $out."direccion = ".$this->direccion."\n"; 
        $out = $out."movil = ".$this->movil."\n"; 
        $out = $out."telefonofijo = ".$this->telefonofijo."\n"; 
        $out = $out."edad = ".$this->edad."\n"; 
        $out = $out."fnacimiento = ".$this->fnacimiento."\n"; 
        $out = $out."email = ".$this->email."\n"; 
        $out = $out."sectipopersona = ".$this->sectipopersona."\n"; 
        $out = $out."secdocumento = ".$this->secdocumento."\n"; 
        $out = $out."sectiposangre = ".$this->sectiposangre."\n"; 
        $out = $out."secestrato = ".$this->secestrato."\n"; 
        $out = $out."seccolegioprocedencia = ".$this->seccolegioprocedencia."\n"; 
        $out = $out."seczona = ".$this->seczona."\n"; 
        $out = $out."secciudad = ".$this->secciudad."\n"; 
        return $out;
    }


    /**
     * Clone will return identical deep copy of this valueObject.
     * Note, that this method is different than the clone() which
     * is defined in java.lang.Object. Here, the retuned cloned object
     * will also have all its attributes cloned.
     */
    function clonar() {
        $cloned = new Persona();

        $cloned->setSecpersona($this->secpersona); 
        $cloned->setPnombre($this->pnombre); 
        $cloned->setSnombre($this->snombre); 
        $cloned->setPapellido($this->papellido); 
        $cloned->setSapellido($this->sapellido); 
        $cloned->setDireccion($this->direccion); 
        $cloned->setMovil($this->movil); 
        $cloned->setTelefonofijo($this->telefonofijo); 
        $cloned->setEdad($this->edad); 
        $cloned->setFnacimiento($this->fnacimiento); 
        $cloned->setEmail($this->email); 
        $cloned->setSectipopersona($this->sectipopersona); 
        $cloned->setSecdocumento($this->secdocumento); 
        $cloned->setSectiposangre($this->sectiposangre); 
        $cloned->setSecestrato($this->secestrato); 
        $cloned->setSeccolegioprocedencia($this->seccolegioprocedencia); 
        $cloned->setSeczona($this->seczona); 
        $cloned->setSecciudad($this->secciudad); 

        return $cloned;
    }



    /** 
     * getDaogenVersion will return information about
     * generator which created these sources.
     */
    function getDaogenVersion() {
        return "DaoGen version 2.4.1";
    }

}

?>

